/*  =========================================================================
    glar150 - generated layer of public API

    Copyright (c) the Contributors as noted in the AUTHORS file.
    This file is part of the Glar150 Project.

    This Source Code Form is subject to the terms of the Mozilla Public
    License, v. 2.0. If a copy of the MPL was not distributed with this
    file, You can obtain one at http://mozilla.org/MPL/2.0/.

################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
    =========================================================================
*/

#ifndef GLAR_LIBRARY_H_INCLUDED
#define GLAR_LIBRARY_H_INCLUDED

//  Set up environment for the application

//  External dependencies
#include <zyre.h>

//  GLAR version macros for compile-time API detection
#define GLAR_VERSION_MAJOR 0
#define GLAR_VERSION_MINOR 0
#define GLAR_VERSION_PATCH 1

#define GLAR_MAKE_VERSION(major, minor, patch) \
    ((major) * 10000 + (minor) * 100 + (patch))
#define GLAR_VERSION \
    GLAR_MAKE_VERSION(GLAR_VERSION_MAJOR, GLAR_VERSION_MINOR, GLAR_VERSION_PATCH)

// czmq_prelude.h bits
#if !defined (__WINDOWS__)
#   if (defined WIN32 || defined _WIN32 || defined WINDOWS || defined _WINDOWS)
#       undef __WINDOWS__
#       define __WINDOWS__
#   endif
#endif

// Windows MSVS doesn't have stdbool
#if (defined (_MSC_VER) && !defined (true))
#   if (!defined (__cplusplus) && (!defined (true)))
#       define true 1
#       define false 0
        typedef char bool;
#   endif
#else
#   include <stdbool.h>
#endif
// czmq_prelude.h bits

#if defined (__WINDOWS__)
#   if defined GLAR_STATIC
#       define GLAR_EXPORT
#   elif defined GLAR_INTERNAL_BUILD
#       if defined DLL_EXPORT
#           define GLAR_EXPORT __declspec(dllexport)
#       else
#           define GLAR_EXPORT
#       endif
#   elif defined GLAR_EXPORTS
#       define GLAR_EXPORT __declspec(dllexport)
#   else
#       define GLAR_EXPORT __declspec(dllimport)
#   endif
#   define GLAR_PRIVATE
#elif defined (__CYGWIN__)
#   define GLAR_EXPORT
#   define GLAR_PRIVATE
#else
#   if (defined __GNUC__ && __GNUC__ >= 4) || defined __INTEL_COMPILER
#       define GLAR_PRIVATE __attribute__ ((visibility ("hidden")))
#       define GLAR_EXPORT __attribute__ ((visibility ("default")))
#   else
#       define GLAR_PRIVATE
#       define GLAR_EXPORT
#   endif
#endif

//  Project has no stable classes, so we build the draft API
#undef  GLAR_BUILD_DRAFT_API
#define GLAR_BUILD_DRAFT_API

//  Opaque class structures to allow forward references
//  These classes are stable or legacy and built in all releases
//  Draft classes are by default not built in stable releases
#ifdef GLAR_BUILD_DRAFT_API
typedef struct _glar_node_t glar_node_t;
#define GLAR_NODE_T_DEFINED
#endif // GLAR_BUILD_DRAFT_API


//  Public classes, each with its own header file
#ifdef GLAR_BUILD_DRAFT_API
#include "glar_node.h"
#endif // GLAR_BUILD_DRAFT_API

#ifdef GLAR_BUILD_DRAFT_API

#ifdef __cplusplus
extern "C" {
#endif

//  Self test for private classes
GLAR_EXPORT void
    glar_private_selftest (bool verbose, const char *subtest);

#ifdef __cplusplus
}
#endif
#endif // GLAR_BUILD_DRAFT_API

#endif
/*
################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
*/
